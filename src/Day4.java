import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Day4 {
  int[] inputs = {57,9,8,30,40,62,24,70,54,73,12,3,71,95,58,88,23,81,53,80,22,45,98,37,18,72,14,20,66,0,19,31,82,34,55,29,27,96,48,28,87,83,36,26,63,21,5,46,33,86,32,56,6,38,52,16,41,74,99,77,13,35,65,4,78,91,90,43,1,2,64,60,94,85,61,84,42,76,68,10,49,89,11,17,79,69,39,50,25,51,47,93,44,92,59,75,7,97,67,15};
  String[] boards = {
    "45 57 55 43 31\n32 52 79 65 80\n21 98 16 64  6\n19 78 48 59 51\n37  2 69 56 99",
    "87 20 29 96 75\n83 34 84 72 98\n70 89 90 73 38\n86  2 47 62 11\n24 60 64 65 31",
    "11 20 22 49 30\n59 87 10 31 68\n64 24 82 26  6\n92 38 48  4 54\n93 81 28 80 99",
    "29  4 62 28 85\n71  2 77  3 98\n74 57 25 33 92\n64 95 61 73 99\n76 36 81 87  1",
    "79 59 96 61 95\n81 77 56 68 36\n69 39  0 55 14\n16  3  4 34 63\n84 80 99 37  9",
    "86 33 77 30 59\n19 54 48 28 89\n26 38 82 68 69\n87 76 85 22 50\n74 72 58 81 49",
    " 3  8 39 15 69\n14 72 90 81 58\n54 13 59 53 97\n84 20 43 57 89\n22 92 28 51 45",
    "86 91 63 52 27\n50 75 94 89 31\n79 44 92 29 97\n34 60 42 37 80\n73 28  7 96 10",
    "85 60 89 34  6\n41 81 39 37 57\n23 70 79 46 15\n74 54 59 88  9\n58 97  5 51  1",
    "54 82 22 26 18\n46 12 21 36 79\n83 71 14 29 45\n42 24 73 58 68\n63 32  9 86 98",
    "59 83 13 34 44\n80 55 81 67  3\n74 58 32 43  6\n61 73 21 23 66\n 2  9 52 29 86",
    "29 24 37 21  2\n81  0 22 59 41\n44 40 72 31 71\n 9 99 50 65 97\n55 69 88 58 96",
    " 3 69 94 88 12\n40 81 77 38  6\n 8 35 91 18 85\n 2 14 73 62 44\n46  9 37  1 20",
    "86 58 85 43 65\n92 44 69  2 14\n83  3 93 16 49\n42 59 29 75 32\n45  4 48 21 68",
    "87 65 80 18 46\n66 49 78 60 31\n20 74 29 96 86\n12 35 47 93 16\n38 91 54 73 28",
    "26 68 98 32 67\n46 61 64 35 38\n92 77 70 76 88\n86  0 58 13 51\n96  1 62 53  8",
    " 2 40 32 62 33\n84 96 99 76 95\n 9  1 12  7 90\n67 11 14 97 24\n42 54 57 45 83",
    "39 99 37  0 95\n18  2 73 31 17\n32 66 21 62  9\n 4 78 22 53 45\n41 33 71  6 50",
    "14 12  2 42  7\n52 71 90 28 75\n 0 40 79 39 93\n84 16 82 31 94\n74 36 59 72 15",
    " 7 92 42 41 22\n28 31 91 68 12\n45 84 83 34 56\n70 43 37 54 60\n61 40 98 77 17",
    "12 81 17 27 66\n49 95 82 97 85\n16 58 13 11 56\n88 31 36 96 23\n 0 51 55 22 62",
    " 8 36  9 63 71\n79 97 60 16 91\n93 68 54 28 32\n42 57 20 43 47\n99 26 67 76 33",
    " 1 55 58 48 92\n66 71 89 46 96\n15 37 94 14 47\n22 61 91 80 51\n33 44 63 10 88",
    " 5 63 34 56  0\n97 22 48 11 85\n29 10 61 30 26\n55  1 32 27 77\n80 81 70 62 33",
    "77 72 75 41 66\n 7 54 58 21 70\n95 30 14 71 99\n20 79 22 91 94\n45 10 86 18 63",
    "55 22 21 79 86\n35 95 99 60  1\n25 68 82 93 14\n74 28 41 73 78\n15 61 70 56  3",
    "80 35 25 22 12\n37 24 97 59 44\n54 84  1 33 11\n 9 28 74 30 95\n67 81 19 71 40",
    "10 78 74 83  8\n90 86 41 82 31\n17 51 54 12 29\n32 62 87  2  0\n98 33 27 22 64",
    "86 80 85 28 26\n44 25  5 78 87\n50 70 57 75 32\n11 20 52 97 88\n68 43  0  7 38",
    "88 16 10 34 75\n76 84 41  1 61\n49 94 14 26 36\n85 77 22 98 70\n12 38  3 74 92",
    "34 91 21 73 99\n28 82 69 18 85\n97 25 65 61 55\n96 33 63  2 77\n12 41 72 39 23",
    " 0 45 95 55 34\n31 77 54 66 79\n90 11 49 68 93\n61 15 56  4 53\n57 69 97  7  6",
    "94 11 44 83 87\n27 47 93 50 38\n29 55 10 49 32\n76 73 91 37 34\n51 62  4 85 46",
    "66 64  5 33 99\n95 34 65 69 27\n49 17 46 53 76\n75  9 92 94  7\n59 60  2 40 70",
    "28 80 27 88 79\n26 49 81 64 69\n90 51 42 83 70\n46 10 53  5 96\n29 99 84 22  8",
    "86 49 31 53 28\n85 94  4 98 30\n51  7 48 88  1\n76 92 64 29 73\n81  6 21 36 74",
    "14 19 15 97 81\n92 37 98 77 33\n20 24  4 51 79\n99 66 43 75 73\n46 87 58 93  5",
    "69 76 46 21 57\n49 90 40 34 99\n70 89  4  0 23\n 5 86 44 62 53\n36 13 61 51 15",
    "88 37 14 50 26\n76 83 24 46  5\n43 42 72 17 59\n 6 11 36 25 19\n70 53 52 98 30",
    "87 93 25 46 74\n62 16  9 30 85\n60 21 29 17  5\n35 49 84 53 42\n13 90 99 70 48",
    "19 91 10 89 52\n71  1 42 75 83\n81 32 96 53  5\n26 60  3 95 51\n44 12 33 76 64",
    "77 17 29 55 43\n62 52 92 53 21\n74 71 46 38  7\n23 79 65 61 89\n50 90 83 26 19",
    "58 85 18 17 29\n76 78 91 87 31\n49 82 95 89  6\n53 79  9 97 25\n48 68 98 13 21",
    "40 90 77 45 48\n18 54 15 56 57\n82 11 36 92 35\n50 68 86  0 97\n24 78 49 75 62",
    "63 91  7 16  8\n90 60 93 40 45\n49 28 41 35 21\n79 54  5  0 13\n68 20 37 55 59",
    "38 26 33 78 76\n42 63 73 98 24\n77 27 67  8 30\n90 13 20 59  5\n32 22  1 46 79",
    "15 39 72 27 73\n14 29 34 30  8\n91 43 66 75 21\n 7 16 78 48 41\n93 83 77 94 57",
    "22 41 70 14 73\n64  4 13 60 98\n59 71 12 53 93\n68 11 54 95 37\n58 35 43 48 87",
    "81  7 49 42 24\n86 76 36 34 16\n55 73 27 28 88\n66 83 58 80 48\n62  9 18 96 77",
    "64 15 37 61 17\n80 69 67 98 89\n22 12 32 74 47\n97 23 49 30 91\n38 68 53 40 82",
    "17  1 56 75 46\n20  2 98 71 96\n34 35 63 73 59\n 7 89 95 51 16\n69 81 37 91 61",
    " 3 17 45 36 59\n 7 24 70 86 72\n77 15 34 69 37\n84 60 76 33  5\n26 21 48 61 12",
    "19 56 90 95  3\n68 50 37 65 27\n39 35 72 61 22\n49 80 24 23 58\n 7 12 89 94  9",
    "45 32 90 66 73\n22  7 41 21 20\n49 63 93 59 15\n 2 82 96 30 27\n40 85  6 97 42",
    "49 12 67  7  0\n24 79 48  6 85\n38 29 13 11 17\n 1 60 70 34 87\n46 75 64 76 14",
    "27 96 15 23 54\n56 39 67 34 76\n43 62 14  7 57\n86 24 35 94 55\n38 51 84 29 16",
    "60 33  9 97 20\n92 26 30 42  7\n36 56 65 99 94\n43 86 41 50 15\n80 98 44 96 88",
    "86 15 65 31 22\n92  3 40 46 68\n39 64 69 47 74\n87 19 50 34 91\n66 27  2 43 32",
    "30 73 45 93 56\n65 82  0 28 60\n77 31 70 46 27\n 7 15 58 76 35\n43 92 91 18 86",
    "31 32 76 63 61\n18 40 38 87  3\n33 82 65 93 89\n98 67 78 70 74\n 6 37 48 71  0",
    "10 58 67 66 61\n60 13 45 23 96\n48 73  4 63 56\n87 75 94 31 98\n70 97 40 19 86",
    " 0 24 58 22 84\n48 36 70 40 33\n94 93  4 77 56\n44 18 45 89 16\n75 35 79 64  6",
    " 2 47 41 21 56\n33 44 51 38 13\n 0 29 88 12 66\n64 78 46 67 50\n49 94 80 42 54",
    "71  8 90 94  5\n19 43 17 96 16\n73 81 53 61 93\n11 15 78 56 30\n66 87  3 65 52",
    "16 92  5 78 42\n56 54 39 87 61\n96 28 29 59 73\n 1 36  8 35 13\n47 32 37 81 38",
    "34 89 41 61 28\n73 74 51 63 11\n 6 88 32 13 92\n69 57 33 27 79\n12 35 43 84 44",
    "37 84 77 75 19\n22 17 99 85 95\n10 48 36 56 32\n82 29 13 89  2\n16 74 53 43  3",
    "87  9 18 33 77\n 7 26 68 46 61\n 5 36  8 96 16\n88  3 92 94 74\n60 15 22 49 43",
    "96 94 89 48 55\n84  5  8 83 51\n12 11 40 97 53\n75 62 71 18 63\n16 19 58 82 44",
    "31 39 17 45 16\n54 92 95 37 65\n55 30 34  3 59\n41 66 48 56 91\n18 88 61 15 28",
    "12 26 96  2 56\n65  9 31 51 17\n78 54 94 80 76\n87 16 30 20 59\n45 64 10 29 71",
    "24 26 47 90 97\n82 86 20 17 30\n93 11 41  3 68\n42 52 88 22 57\n83 49 69  0 73",
    "55 90 51 38 92\n96 61 50 34 63\n78 72  8 73 85\n25 76 45 89 32\n58 54  1  9 16",
    "32 89 12 43 58\n59  6 54 91 17\n 2 37 99 78 45\n57 63 29 90 21\n66 83 34  0 61",
    "58 55 63  0  6\n15 90 57 39 56\n 8 76 20 89 30\n61 79 83 70 42\n78 81 43 64 41",
    "93 14 57 55 53\n84  0 24 22 54\n 5 90 87 26 13\n 4 46 64 18 17\n 9 58 67 68 92",
    "39 76 85 24  9\n36 27 93 64 33\n40 73 31 74 41\n 0 10 57  5 91\n 4 16 59 54 96",
    "34 82 54 14 87\n59 21  1 30 60\n27 45 71 58 97\n 4 72 70 85 39\n38 74 96 12 91",
    "48 78  3 42 24\n26 85 56  4 80\n35  8 29 93 55\n91 73  7 75 54\n 1 61 88 74 99",
    "68 40 41 63 17\n73 61 45 57 66\n14 15 78  0  6\n33 46 47 95 82\n92 48 10  1 70",
    "79 19 88 55 81\n40 35 15 63 21\n85 26 57 97 39\n71 24 60 89 22\n 5 27 49 28 38",
    " 3 90 23 80 78\n74 89 53 63 14\n48 56 72 71 29\n15 36 45 83 39\n50 44 28 67 97",
    "91 22 63 55 26\n69  4 11 42 75\n92 65 48 28 72\n51 79 15 80 68\n98 59 24 64  9",
    "48 87 47 81  6\n35 60 59 69 20\n62 99 41 21 63\n51 46 19 12 84\n80 57 28 64 32",
    "86 53 52 33 25\n39 90 40 95 88\n 6 61 78 46 91\n 2 74 76 70 89\n18 96 56 12 16",
    "65 17 39 45 85\n31 87 63 47 22\n38  1  3 80 20\n25 62 13 12 72\n95 36 11 86 67",
    "75 92 82 14  8\n16 20 72 77 23\n 0 61  9 50 18\n96 19 21 63 70\n76 80 53 64 41",
    "60 20 69 68 35\n64  9 29 14 15\n49 75 53 88 98\n95 28  7 42 25\n 5 74 80  1  4",
    "41  6 58 42 85\n75 65 50  0  7\n82 80 12  5 61\n19 48 21 87 47\n71 14 24  8 23",
    "95 81  9 27 75\n93 33 63 89 32\n46  8 59 51 28\n37  6 67 57 52\n68  4  0 44 14",
    " 5 88 61 35 85\n68 92 48 74  6\n13 53 55 94 25\n12 15 52 86 96\n23 76 16 45 82",
    "54 35 90 57 30\n58 25 97 89 41\n62 75  5  0 94\n86 93 77 37 16\n68 48 33 76 20",
    "61 87 30 76 49\n36 39 74 63 23\n92 82 21 45 79\n33 59 57 83 10\n 6 51 93 85 81",
    "13 50 17 52 73\n59 38 46 87 96\n35 63 21  3  8\n 6 97 90 23 71\n95 27 66 77 15",
    "87 69 71  2 38\n 0 64 14 92 33\n12 46 15 89 97\n48 41 43 52 44\n16 21 74 31 60",
    " 6 71 87 35 74\n40 16 19 73 69\n 1 67 42 78 23\n49 59 65 45 53\n48 82 30 72 39",
    "39 31 13  2 38\n60 65 18  7  1\n74 23 78 51  4\n50 61 83 94 25\n34  3 80  6 87",
    "87 15 42 55 64\n93 30 83 80 46\n24 81 26 31  8\n84 14 67 82 23\n75 22 94 74 40",
    "40 21 75  2 78\n25 15 49 61 55\n98 70 92 93 63\n53  1  0 33 32\n12 59 18 44 73",
    "78 11 12 58 61\n26  8 51 28 69\n64 35 89 95  1\n20 79 62 13 83\n53  7 84 18 34\n"
  };
  public void solvefirst() {
    ArrayList<Board> boardList = new ArrayList<>();
    for(String input: boards) {
      boardList.add(new Board(input));
    }
    System.out.println(boardList.get(0).getBoard().get(2).get(1).value);
  }
  

  
}
class Board {
  ArrayList<ArrayList<Box>> board = new ArrayList<>();
  public Board(String input) {
    ArrayList<String> lines = new ArrayList<>(Arrays.asList(input.split("\n")));
    lines.removeIf(x -> "".equals(x));
    for (String onestring : lines) {
      ArrayList<String> numbers = new ArrayList<>(Arrays.asList(onestring.split(" ")));
      numbers.removeIf(x -> "".equals(x));
      ArrayList<Box> boxes = new ArrayList<>();
      for(String number: numbers) {
        Box box = new Box(Integer.parseInt(number));
        boxes.add(box);
      }
      board.add(boxes);
    }
  }

  public List<ArrayList<Box>> getBoard() {
    return board;
  }
}

class Box {
  int value;
  boolean isCalled = false;

  public Box(int input) {
    value = input;
  }

  public void call(int calledValue) {
    if(calledValue == value) {
      isCalled = true;
    }
  }

  public boolean check() {
    return isCalled;
  }
}
